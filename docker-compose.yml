version: "3.8"
services:

  # backend_db:
  #   image: mysql:8
  #   container_name: backend_db
  #   command: --default-authentication-plugin=mysql_native_password
  #   restart: always
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=${BACKEND_MYSQL_ROOT_PASSWORD}
  #     - MYSQL_DATABASE=${BACKEND_MYSQL_DB}
  #     - MYSQL_PASSWORD=${BACKEND_MYSQL_PASSWORD}
  #     - MYSQL_USER=${BACKEND_MYSQL_USER}
  #   volumes:
  #     - ./${DB_FOLDER}/${BACKEND_MYSQL_HOST}:/var/lib/mysql
  #   networks:
  #     - backend
  #   ports:
  #     - "3306:3306"

  backend_db_postgres:
    image: postgres:latest
    container_name: backend_db_postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=${BACKEND_POSTGRESQL_ROOT_PASSWORD}
      - POSTGRES_DB=${BACKEND_POSTGRESQL_DB}
      - POSTGRES_USER=${BACKEND_POSTGRESQL_USER}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend
    ports:
      - "5432:5432"

  backend:
    image: backend_container
    container_name: backend_container
    restart: always
    working_dir: /${BACKEND_WORKING_DIR}
    volumes:
      - ./packages/backend:/${BACKEND_WORKING_DIR}
      - /${BACKEND_WORKING_DIR}/node_modules
    ports:
      - "3000:3000"
      - "9229:9229"
    networks:
      - backend
    environment:
      - START_TYPE
      - NODE_ENV
      - BACKEND_WORKING_DIR
    build:
      context: ./packages/backend
    command: yarn run start:${START_TYPE}

  admin:
    image: admin_container
    container_name: admin_container
    restart: always
    working_dir: /${ADMIN_WORKING_DIR}
    volumes:
      - ./packages/admin:/${ADMIN_WORKING_DIR}
      - /${ADMIN_WORKING_DIR}/node_modules
    ports:
      - "8080:8080"
      - "9230:9229"
    networks:
      - admin
    environment:
      - START_TYPE
      - NODE_ENV
      - ADMIN_WORKING_DIR
    build:
      context: ./packages/admin
    command: yarn run start:${START_TYPE}

networks:
  admin:
  # frontend:
  backend:

volumes:
  pgdata:
